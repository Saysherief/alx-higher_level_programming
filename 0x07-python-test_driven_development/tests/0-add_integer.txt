#These are the test cases that I tried
--------------------------------------
Test for 0-add_integer
======================================

import the function:
	>>> add_integer = __import__("0-add_integer").add_integer

check for module doc:
	>>> doc_mod = __import__("0-add_integer").__doc__
	>>> len(doc_mod) > 1
	True

check for function doc:
	>>> doc_add = __import__("0-add_integer").add_integer.__doc__
	>>> len(doc_add) > 1
	True

check for addition of two integers:
	>>> add_integer(100, -2)
	98
	>>> add_integer(45, 54)
	99

check for addition of floats:
	>>> add_integer(10.5, 20.5)
	30
	>>> add_integer(100.8, -8.3)
	92

check for non numbers:
	>>> add_integer("Super", 5)
	Traceback (most recent call last):
	TypeError: a must be an integer

check for addition when one argument:
        >>> add_integer(10.5)
        108
        >>> add_integer(1)
        99

check for no argument:
        >>> add_integer()
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	TypeError: add_integer() missing 1 required positional argument: 'a'

check for more than required args:
	>>> add_integer(1, 2, 3)
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
